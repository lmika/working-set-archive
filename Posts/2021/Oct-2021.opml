<?xml version="1.0"?>
<opml version="2.0">
	<head>
		<title>Working Set</title>
		<dateCreated>Mon, 11 Oct 2021 22:45:00 GMT</dateCreated>
		<flPublic>true</flPublic>
		<urlPublic>http://drummer.scripting.com/_leonmika/blog.opml</urlPublic>
		<description>A Work Journal</description>
		<copyright>© Leon Mika 2021 • Licensed under Creative Commons Attribution 4.0</copyright>
		<urlHeaderImage>https://images.workingset.net/headings/level-crossing.jpg</urlHeaderImage>
		<timeZoneOffset>+10:00</timeZoneOffset>
		<rssLink>https://workingset.net/rss.xml</rssLink>
		<urlBlogWebsite>https://workingset.net/</urlBlogWebsite>
		<urlAboutOpml>http://drummer.scripting.com/_leonmika/working-set-about.opml</urlAboutOpml>
		<urlTemplate>https://static.workingset.net/templates/index.html</urlTemplate>
		<ownerTwitterScreenName>_leonmika</ownerTwitterScreenName>
		<ownerName>Leon Mika</ownerName>
		<ownerId>http://twitter.com/_leonmika</ownerId>
		<urlUpdateSocket>ws://drummer.scripting.com:1232/</urlUpdateSocket>
		<dateModified>Tue, 04 Jan 2022 22:40:25 GMT</dateModified>
		<expansionState>1,2,4,5,8,16,18,20,23,24,25,35,36,40,42,46,48</expansionState>
		<lastCursor>61</lastCursor>
		</head>
	<body>
		<outline text="October 2021" created="Mon, 11 Oct 2021 22:47:05 GMT" name="october2021" type="calendarMonth">
			<outline text="October 31" created="Sat, 30 Oct 2021 22:28:03 GMT" type="calendarDay" name="31">
				<outline text="I wrote a bit of a &lt;a href=&quot;https://txt.fyi/-/21302/e4308fba/&quot; style=&quot;&quot;&gt;brain dump&lt;/a&gt; for a wrapper around esbuild that I'd like to see.  If I find myself getting too bogged down with trying to work with esbuild in a simple makefile, I may get around to building this.  I will try to hold out for as long as I can — I don't need yet another project right now." created="Sat, 30 Oct 2021 23:21:18 GMT" type="outline"/>
				<outline text="I just spent 20 minutes trying to work out why &lt;a href=&quot;https://esbuild.github.io&quot;&gt;esbuild&lt;/a&gt; was closing immediately when launching it in the background with the &lt;code&gt;--watch&lt;/code&gt; flag.  Turns out that esbuild stops watching when &lt;a href=&quot;https://github.com/evanw/esbuild/issues/1511&quot;&gt;stdin is closed&lt;/a&gt;.  I had no idea that this was a convention: I expected the command to watch for files regardless of the state of stdin until I explicitly kill it.&lt;p&gt;Anyway, the way to get around it is to do the following: &lt;code&gt;sleep 99999 | esbuild main.js --bundle --outfile=out.js --watch &amp;&lt;/code&gt; " created="Sat, 30 Oct 2021 22:28:04 GMT" type="outline"/>
				<outline text="Some Screenshots Of Broadtail" created="Sun, 31 Oct 2021 03:09:12 GMT" type="outline">
					<outline text="I spent some time this morning doing some styling work on Broadtail, my silly little YouTube video download manager I'm working on." created="Sun, 31 Oct 2021 03:09:25 GMT"/>
					<outline text="List of download jobs" created="Sun, 31 Oct 2021 03:15:55 GMT" inlineImage="https://images.workingset.net/2021/10/broadtail-screenshot-1.png"/>
					<outline text="Now, I think it's fair to say that I'm not a designer.  And these designs look a little dated, but, surprisingly, this is sort of the design I'm going for: centered pages, borders, etc.  A bit of a retro, tasteless style that may be ugly, but still usable(-ish)." created="Sun, 31 Oct 2021 03:10:25 GMT"/>
					<outline text="Details of a download job." created="Sun, 31 Oct 2021 03:17:19 GMT" inlineImage="https://images.workingset.net/2021/10/broadtail-screenshot-2.png"/>
					<outline text="It's not quite finished — the colours need a bit of work — but it's sort of the style I have in my head." created="Sun, 31 Oct 2021 03:10:02 GMT"/>
					</outline>
				</outline>
			<outline text="October 30" created="Fri, 29 Oct 2021 23:46:09 GMT" type="calendarDay" name="30">
				<outline text="I hope I'm doing the right thing here.  I was preparing a new release of Feed Journaler which includes a fix for how imported posts were being tracked.  The previous version had a bug in which the item's URL was used as the unique identifier of an imported post.  This is wrong, and I fixed it to use the item's GUID, which is the proper identifier to use.  But this mean that every imported post has an incorrect identifier in Feed Journaler's database.  Now, from my experience, I found that the GUID of the post would usually be the same as the URL anyway, so when I was building this feature, I was not expecting any need to perform a migration.&lt;p&gt;However, during some last minute testing, I noticed that the GUIDs of my Micro.blog posts were different from the URLs.  In short, the post's GUID start with &quot;http://&quot; whereas the URL start with &quot;https://&quot; (at least it does for my blog).  The result is duplicate import, which is not good.  Now, I guess that I could just allow for this since Feed Journaler is still in beta.  But this is really not a great user experience, and actually quite embarrassing.  Even though I advise those using Feed Journaler to import posts into a test journal, I really want to avoid messing up people's Day One journal if I can avoid it.&lt;p&gt;So I'm spending some time to fix the dodgy tracking data to avoid duplicate imports.  This means a delay in the release, and addition of code which will do a data migration, which is always a little scary.  It pains me that this will delay the release — to be frank, there's not much in the upcoming release apart from a few bug fixes — and I hate doing anything that touches the database at this stage which, should it go wrong, will blow up in my face.  But I think it's the right thing to do, at least at this stage. " created="Fri, 29 Oct 2021 23:46:10 GMT" type="outline"/>
				</outline>
			<outline text="October 29" created="Thu, 28 Oct 2021 20:27:08 GMT" type="calendarDay" name="29">
				<outline text="Why don't text editors automatically trim whitespace from the end of lines within source files?  Is there anything that needs that whitespace (aside from string blocks, which is the only thing that I can legitimately think of)?" created="Fri, 29 Oct 2021 00:08:23 GMT" type="outline"/>
				<outline text="Feed Journaler and Drummer Update" created="Thu, 28 Oct 2021 20:39:42 GMT" type="outline" image="https://feedjournaler.app/imgs/favicon144.png">
					<outline text="I've been neglecting Feed Journaler recently, and it's paying me back in kind. " created="Thu, 28 Oct 2021 20:40:06 GMT"/>
					<outline text="The app was having trouble reading Dummer posts with inline HTML tags.  Not a fault with Drummer — this was entirely my own doing.  I previously made some fixes to Feed Journaler to handle the plain text posts I started making on Drummer, but as soon as I started writing posts that included HTML tags like &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;, Feed Journaler stopped importing them, and it came to the point when these series of hacks needed to be replaced with something nicer." created="Thu, 28 Oct 2021 20:40:27 GMT"/>
					<outline text="To explain this further, I'll need to talk about how Feed Journaler translates HTML to Markdown.  The first thing it does is take the HTML content from the RSS item, and tidies it up with &lt;a href=&quot;https://github.com/scinfu/SwiftSoup&quot;&gt;SwiftSoup&lt;/a&gt; to produce a nice HTML DOM tree.  Then, it starts traversing the nodes of the tree, trying to determine how to translate a particular HTML node into a Markdown element.  A Markdown element is either considered to be a block or a span.  Block elements are essentially content items which are arranged vertically along the page.  Examples of blocks include headings, paragraphs, blockquote or bullet lists.  Span elements go across the page, and are either runs of plain text, or attributes used to give properties to other spans — like bold, italics, or links." created="Thu, 28 Oct 2021 20:44:39 GMT"/>
					<outline text="Elements can usually contain other elements.  The blockquote element, for example, can contain other block elements which make up the quoted text.  Span elements can contain other elements as well, but they must be a span; there's no way for you to have a bold element containing a codeblock.  Feed Journaler was designed for HTML posts generated from a Markdown parser, which usually wrap text in &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; nodes, so the translator was expecting a collection of block elements at the top level.  This means that the only way to include text in the translation output was if it appeared in a paragraph block.  RSS items from Micro.blog and blot.im did this out of the box, so no special processing was necessary here.  But this is not the case for Dummer." created="Thu, 28 Oct 2021 21:16:28 GMT"/>
					<outline text="Drummer posts don't have their content wrapping in paragraph elements: if the content is plain text, it will appear in the RSS item as plain text.  If you were to add formatting or links to a post, it would appear as HTML nodes that would have been translated to span elements, but the original problem of no top level block element to contain it all would persist.  The result: Feed Journaler would refuse to import the post." created="Thu, 28 Oct 2021 20:53:18 GMT"/>
					<outline text="To deal with this sort of content, I recently made a change to Feed Journaler so that it would peak at the first level of HTML nodes to determine whether they are all blocks or all spans.  If they are all blocks, the existing translation method was used; but if they were all spans, Feed Journaler would collect them all, and translate it into a single paragraph block." created="Thu, 28 Oct 2021 21:54:18 GMT"/>
					<outline text="But this approach starts breaking down as soon as HTML elements like &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; were introduced into the post.  Feed Journaler was expecting the contents to be exclusively blocks, or exclusively spans.  Mixing the two results in translator giving up and saying, effectively, &quot;I don't know how to translate this.&quot;" created="Thu, 28 Oct 2021 20:40:59 GMT"/>
					<outline text="So last night I had another go at this.  The translator no longer does this peeking, but will now do a special hybrid translation of the top level.  It maintains a list of blocks and a separate list of spans.  While the translator is traversing these set of top-level child nodes, and it encounters either a non-empty text nodes, or an element that can produce a span, it adds it to a list of spans.  Once it encounters a HTML element that can produce a block, it will check if there are any spans in this list.  If there is, it will turn that collection of span elements into a paragraph block, add it to the list of blocks, and empty the lists.  This goes on until the end, in which it will do this one last time, and return the list of translated blocks." created="Thu, 28 Oct 2021 20:41:22 GMT"/>
					<outline text="This should be a viable solution for this sort of mixed content, at least at this time.  I know I keep saying that I need to completely rewrite the HTML to Markdown translation logic, but that's a big task, and I think I can use current approach for a little while longer.  I do need to clean up the code — there were a lot of hacks which, in theory, could be removed with this new way of doing things — but this is relatively simple to do." created="Thu, 28 Oct 2021 21:08:34 GMT"/>
					</outline>
				</outline>
			<outline text="October 28" created="Wed, 27 Oct 2021 20:34:40 GMT" type="calendarDay" name="28">
				<outline text="Probably the worst possible form of software testing and debugging is when you're trying to fix issues with the build.  A lot of too-and-fro between making changes, committing them, then pushing them to run on the build server.  Makes the whole cycle 10 times slower. " created="Thu, 28 Oct 2021 03:06:43 GMT" type="outline"/>
				<outline text="It would be nice if linters could add their error messages in the source file as a comment.  That way, when I'm trying to fix all the linting problem, I can simply search for a particular comment pattern and fix them all without leaving the editor.  Even better would be some form of editor integration which doesn't run linting continuously.  I know certain linters are available as a  plugin, but I prefer to leave linting until the end of a feature development task so that it doesn't distract me from getting something working." created="Wed, 27 Oct 2021 20:34:41 GMT" type="outline"/>
				</outline>
			<outline text="October 26" created="Mon, 25 Oct 2021 20:32:00 GMT" type="calendarDay" name="26">
				<outline text="I'm doing some testing in AWS at the moment.  I need to create a resource that has to be accessible from the internet.  AWS doesn't let me select which subnet the resource should be created in.  Instead, I have to create a group of subnets, and when the resource is created, a subnet is chosen from the group at random.&lt;p&gt;When I created the subnet group, I accidentally included one that was actually private.  Of course, when I created the resource, it chose that subnet." created="Mon, 25 Oct 2021 22:42:55 GMT" type="outline"/>
				<outline text="I'm really liking Drummer as a writing environment.&lt;p&gt;One thing I wish it supported was the ability to use paragraph breaks in these micro posts.  It seems like the only way to include them is with a titled post, which is a bit of a shame.  But I guess it helps keep these posts relatively short.&lt;p&gt;EDIT - Ah, OK.  Looks like paragraph breaks are supported as long as you type them using HTML, e.g. &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;.  This also works for code blocks as well.  I guess this means that angle brackets would need to be typed using &lt;code&gt;&amp;amp;lt;&lt;/code&gt; and &lt;code&gt;&amp;amp;gt;&lt;/code&gt;, which I'll need to keep in mind.  It's not as nice as Markdown unfortunately, but it will do." created="Mon, 25 Oct 2021 20:32:01 GMT" type="outline"/>
				</outline>
			<outline text="October 25" created="Sun, 24 Oct 2021 21:37:19 GMT" type="calendarDay" name="25">
				<outline text="Spent the evening getting this Drummer blog working with HTTPS.  &lt;a href=&quot;https://github.com/scripting/drummerSupport/issues/78&quot;&gt;This set of the instructions&lt;/a&gt; have been very helpful.  I had a bit of difficulty trying to get the templates working though.  First was working out where they should be served.  I'm using PagePark to serve this blog and as far as I could tell, there is no real way to serve static files in the same domain as the blog.  So I settled for a subdomain and so far it's been working well (it's all virtual hosting anyway so no real issue there).  One other thing about the templates: I suggest using the ones with &quot;minimal&quot; in the path, as they seem to be the default set used by Old School.  Also, make sure both the JavaScript and CSS files are also the &quot;minimal&quot; ones, or the generated blogs may end up blank.  Once I got the templates working, the second issue was trying to speed up loading.  There are a lot of blocking JavaScript includes which seem to slow the page right down.  I'm wondering if it makes sense moving the ordering to the bottom of the page, or even compressing them into a single JavaScript file.  I made some minor improvements but if it gets any slower, I may need to consider this." created="Mon, 25 Oct 2021 10:48:50 GMT" type="outline"/>
				<outline text="For anyone else who is attempting to debug something on MacOS, and is unable to get pass the dialog box asking for a username and password of someone in the &quot;Developers Group&quot;, &lt;a href=&quot;https://discussions.apple.com/thread/2654321&quot;&gt;this forum thread&lt;/a&gt; seems to work.  Oh, and Apple; if you're reading this, it would also be nice to only be asked for this &lt;b&gt;once&lt;/b&gt;, so that I don't have to see this prompt every time I restart my machine." created="Sun, 24 Oct 2021 21:37:20 GMT" type="outline"/>
				</outline>
			<outline text="October 24" created="Sat, 23 Oct 2021 20:24:51 GMT" type="calendarDay" name="24">
				<outline text="More work on the project I mentioned yesterday, codenamed Broadtail.  Most of the work was around the management of download jobs.  I'm using a job management library I've built for another project and integrated it here so that the video downloads could be observable from the web frontend.  The library works quite well, but at the moment, the jobs are not kept on any sort of disk storage.  They are kept in memory until they're manually cleared, but I'm hoping to only keep the active jobs in memory, and store historical jobs onto disk.  So most of today's session was spent on making that possible, along with some screens to list and view job details." created="Sun, 24 Oct 2021 02:08:17 GMT" type="outline"/>
				</outline>
			<outline text="October 23" created="Fri, 22 Oct 2021 20:16:55 GMT" type="calendarDay" name="23">
				<outline text="Start of Yet Another Project Because I Can't Help Myself" created="Fri, 22 Oct 2021 21:34:13 GMT" type="outline">
					<outline text="One of the reasons why I stopped work on Lorikeet was that I was inspired by those on Micro.blog to setup a Plex server for my YouTube watching needs.  A few years ago, I actually bought an old Intel Nuc for that reason, but I never got around to setting it up.  I managed to do so last Wednesday and so far it's working pretty well." created="Fri, 22 Oct 2021 21:34:42 GMT"/>
					<outline text="The next thing I'd like to do is setup RSS subscriptions for certain YouTube channels and automatically download the videos when they are publish.  I plan to use &quot;youtube-dl&quot; for the actual video downloading part, but I'm hoping to build something that would poll the RSS feeds and trigger the download when new videos are published.  I'm hoping that this service would have a web-based frontend so I don't have to login via SSH to monitor progress, etc." created="Fri, 22 Oct 2021 21:34:52 GMT"/>
					<outline text="The download's would need to be automatic as the requests made by &lt;code&gt;youtube-dl&lt;/code&gt; seem to be throttled by YouTube and a longish video may take several hours to download.  If this was a manual process, assuming that I would actually remember to start the download myself, the video won't be ready for my evening viewing.  I'm hoping that my timezone would work to my advantage here.  The evenings on the US East Coast are my mornings, so if a video download starts at the beginning of the day, hopefully it would be finish when my evening rolls around.  I guess we'll see." created="Fri, 22 Oct 2021 21:37:01 GMT"/>
					<outline text="Anyway, that's what my current coding project will be on: something that would setup RSS subscriptions for YouTube channels, and download new videos when they are published." created="Fri, 22 Oct 2021 21:41:37 GMT"/>
					<outline text="This is probably one of those things that already exist out there.  That may be true, but there are certain things that I'm hoping to add down the line.  One such thing might be adding the notion of an &quot;interest level&quot; to channels which would govern how long a video would be kept around.  For example, a channel that is marked as very interested would have every video downloaded and stored into Plex straight away.  Mildly interested channels would have videos download but kept in a holding place until I choose to watch it, in which case it would be moved to Plex.  If that doesn't happen in 7 days or so, the videos would be removed." created="Fri, 22 Oct 2021 21:59:58 GMT"/>
					<outline text="I'd like to also add some video lifecycle management into the mix as well, just to avoid the disk being completely used up.  I can see instances where I'd like to mark videos as &quot;keep for ever&quot; and all the others will churn away after 14 days or so.  It might be worth checking out what Plex offers for this, just to avoid doubling up on effort." created="Fri, 22 Oct 2021 21:49:05 GMT"/>
					<outline text="But that's all for the future.  For the moment, my immediate goal is to get the basics working." created="Fri, 22 Oct 2021 21:45:46 GMT"/>
					</outline>
				</outline>
			<outline text="October 21" created="Thu, 21 Oct 2021 02:13:00 GMT" type="calendarDay" name="21">
				<outline text="I wonder if there's many people hosting the code for their side projects on a server they run and operate.  I'm sure the large majority of developers just use something like GitHub — like I do — but for those that prefer to go it alone, I wonder how many of them would be worried about loosing all their work due to something going wrong.  I guess that should a disaster occur, there's a chance they would be able to recover most of their work thanks to how Git works, so long as it's still on the machine they use to work on.  Plus there's backups, the ability to setup mirrors, etc. and all the other usual stuff that can be put in place to recover from disasters.  But making sure that all this works would be a bit of an ongoing commitment, and may not save you if something is setup incorrectly when the proverbial fan is involved.  For me, it would be nice to host my own code on a GitLab service running in Linode.  It's just dealing with the potential of data lost that's keeping me from doing so." created="Thu, 21 Oct 2021 02:13:01 GMT" type="outline"/>
				</outline>
			<outline text="October 19" created="Mon, 18 Oct 2021 20:58:04 GMT" type="calendarDay" name="19">
				<outline text="Ok, that approach of using the &quot;Pass&quot; state to inject additional details into payloads from errors worked.  One thing that needs to be considered is using the &quot;ResultPath&quot; construct in order to mix the result data with the original error payload.  I guess this will have to do but, again, it would be nice if this was included in the workflow definition language itself.  I can foresee this approach leading to a bunch of extra states just to have some decent error messages." created="Tue, 19 Oct 2021 00:27:24 GMT" type="outline"/>
				<outline text="AWS needs to improve the capabilities of handling errors in their Step Function workflow definition.  It's too limiting at the moment.  A single task can raise an error, which will have both an error code and a cause message, but there is no easy way to pass anything else.  If, for example, you'd like to include an error message suitable for the end user which is separate from &quot;cause&quot;, you can't really do this using something like the &quot;ResultPath&quot; construct.  The only way that I can see this being doable is transitioning to a &quot;Pass&quot; state, which will produce a result containing the details you want to include with the error.  At least, this is the theory — will give it a try to see if it actually works in practice." created="Mon, 18 Oct 2021 23:22:40 GMT" type="outline"/>
				<outline text="Abandoning Project Lorikeet" created="Mon, 18 Oct 2021 20:58:05 GMT" type="outline">
					<outline text="I'll admit it: the mini-project that I have been working on may not have been a good idea. " created="Mon, 18 Oct 2021 21:03:56 GMT"/>
					<outline text="The project, which I gave the codename Lorikeet, was to provide a way to stream YouTube videos to a Chromecast without using the YouTube app.  Using the YouTube app is becoming a real pain.  Ads aside, they've completely replaced the Chromecast experience from a very basic viewing destination to something akin to a Google TV, complete with recommendations of &quot;Breaking News&quot; from news services that I have no interest in seeing." created="Mon, 18 Oct 2021 21:04:22 GMT"/>
					<outline text="So I spent some time trying to build something to avoid the YouTube app completely, using a mixture of youtube-dl, a Buffalo web-app, and a Flutter mobile app.  I spent the last week on it (it's not pretty so no screenshots), but at this stage I don't see much point continuing to work on it." created="Mon, 18 Oct 2021 21:16:58 GMT"/>
					<outline text="For one, the experience is far from perfect.  Video loading is slow and there are cases when the video pauses due to buffering. I'm sure there are ways around this, but I really don't want to spend the time learning how to do this." created="Mon, 18 Oct 2021 21:04:04 GMT"/>
					<outline text="It was also expensive. I have a Linode server running in Sydney which acts as a bit of a hobby server (it's also running Pagepark to serve this site); but in order to be closer to the YouTube CDNs that are closer to me, I had to rent a server that would run in Melbourne.  And there are not many VPS hosting providers that offer hosting here." created="Mon, 18 Oct 2021 21:05:01 GMT"/>
					<outline text="So I went with Google Cloud." created="Mon, 18 Oct 2021 21:07:12 GMT"/>
					<outline text="Now, I'm sure there's a lot to like about Google Cloud, but I found its VPS hosting to be quite sub-par.  For just over $10 USD a month, I had a Linux virtual server with 512 MB of RAM, 8 GB of storage, and a CPU which I'd imagine is throttled all the way back as trying to do anything of significants slowed it to a crawl.  I had immense issues installing OS updates, getting the Dokku based web-app deployed, and trying to avoid hitting the storage limit." created="Mon, 18 Oct 2021 21:06:49 GMT"/>
					<outline text="For the same amount of money, Linode offers me a virtual server with 2 GB of RAM, 50 GB of storage, and a real virtual CPU.  This server is running 4 Dokku apps, 3 of them with dedicated PostgreSQL databases, and apart from occasionally needing to remove dangling Docker images, I've had zero issues with it.  None!  (The podcasters were right)." created="Mon, 18 Oct 2021 21:11:34 GMT"/>
					<outline text="Where was I?  Oh, yeah.  So, that's the reason why I'm abandoning this project and will need to re-evaluate my online video watching experience.  I might give Plex a try, although before doing something like setting up a dedicated media server, I'll probably just use the Mac Mini I've been using for a desktop in the short term." created="Mon, 18 Oct 2021 21:15:14 GMT"/>
					<outline text="So, yeah, that's it.  It's hard to abandon a project you spent any amount of time on.  I suppose the good thing is that I got to play around with Flutter and learnt how to connect to a Chromecast using Dart, so it's not a complete waste." created="Mon, 18 Oct 2021 21:15:34 GMT"/>
					</outline>
				</outline>
			<outline text="October 18" created="Mon, 18 Oct 2021 00:20:52 GMT" type="calendarDay" name="18">
				<outline text="About Working Set" created="Mon, 18 Oct 2021 03:57:00 GMT" type="outline" isComment="false">
					<outline text="For a little while now I've been writing weekly project updates on &lt;a href=&quot;https://randomdev.blog/&quot;&gt;randomdev.blog&lt;/a&gt;, which was a bit of a tech blog that I started at the beginning of the year.  The original motivation of that blog was to be a place where I could write about tech-related stuff like what I've been working on and the goings on in the industry." created="Sat, 16 Oct 2021 23:05:16 GMT"/>
					<outline text="I was hoping to keep this blog up to date through a technique I call &quot;passive blogging&quot;.  I can't remember where I saw that term, or if it was a term that is used anywhere at all.  Doing a DuckDuckGo search on &quot;passive blogging&quot; brings up a lot of hits about earning passive income from blogging, which is not what I mean." created="Sat, 16 Oct 2021 23:28:00 GMT"/>
					<outline text="Basically, what I mean by &quot;passive blogging&quot; is a form of blogging that is as frictionless as possible.  A toolset and a mode of writing that feels natural and efficient to a degree that you would just want to write.  A good example of this is the type of writing that Dave Winer does on his site &lt;a href=&quot;http://scripting.com/&quot;&gt;scripting.com&lt;/a&gt; (it might have been him that actually used the term &quot;passive blogging&quot; although I cannot find the original post). It is this style of blogging that I'd like to achieve." created="Sun, 17 Oct 2021 01:18:27 GMT"/>
					<outline text="Incidentally, I guess this is what is so attractive about Twitter, as it seems to provide this to others.  I've never been a huge user of Twitter, and as someone who is also interested in &lt;a href=&quot;https://indieweb.org/&quot;&gt;owning my own content&lt;/a&gt;, I have no intentions on doing so soon." created="Mon, 18 Oct 2021 03:39:50 GMT"/>
					<outline text="I tried to achieve this with randomdev.blog, with mixed success.  I kept it up for about a month or so, but like many other blogs before it, the updates slowed to a trickle, and then nothing for long stretches of time." created="Sat, 16 Oct 2021 23:30:49 GMT"/>
					<outline text="I can think of two reasons for this .  The first had to do with the blog name itself.  I was never a huge fan of the name &quot;The Random Developer Blog&quot;.  It was meant to be a bit of a tongue-in-cheek joke to myself — a site of random bits of news, comments and updates by a guy just doing random things with technology.  But I felt that it also began to trivialise the writing somewhat, as if it was not worthy of publishing online.  I not one to say that what I wrote on the site is important in any way — it was mostly an avenue of let off steam or journal something — but the general feeling began to take on a bit of a demotivating force nonetheless." created="Mon, 18 Oct 2021 03:44:54 GMT"/>
					<outline text="The second reason has much to do with the workflow and presentation of the blogging CMS itself.  I do like &lt;a href=&quot;https://blot.im/&quot;&gt;blot.im&lt;/a&gt; as a simple blogging host, but it felt like a CMS geared towards medium to long-form writing.  Having a blogging CMS support long-form writing is something I'd want — in fact I don't think I do enough long-form writing — but it felt like short-form posts were lacking somewhat.  I should probably write more about the specific here, but I'll need to organise my thoughts a little first." created="Sat, 16 Oct 2021 23:35:56 GMT"/>
					<outline text="So as is my want, I thought I'd start again.  I bought a domain which is more applicable for the type of content that I'd like to publish.  And after hearing about the release of Drummer, it felt like the perfect CMS to use, at least at the start." created="Sat, 16 Oct 2021 23:35:47 GMT"/>
					<outline text="Does this mean that randomdev.blog will be retired?  Not sure at this stage.  It might be useful to keep it up at least in the short term, as there are some nice facilities that it has like posting codeblocks that I'm not sure Drummer supports at the moment.  But I think it's safe to say I'll probably be spending more time here." created="Sun, 17 Oct 2021 01:24:03 GMT"/>
					</outline>
				</outline>
			<outline text="October 17" created="Sat, 16 Oct 2021 23:04:53 GMT" type="calendarDay" name="17">
				<outline text="Pro tip: I've discovered that toggling outlines as comments is a pretty good way to have draft posts in Drummer.  Selecting the top level node and pressing &quot;Cmd+\&quot; would convert it to a comment, which will not be included in the published blog." created="Sun, 17 Oct 2021 01:26:58 GMT" type="outline"/>
				<outline text="Reading the docs, I now see that it's possible to set the timezone of published Drummer posts.  So hopefully now these posts show up under the same day I'm writing them.  I chose Australian EST (+10:00), even though it's actually EDT at the moment (+11:00).  I figured it's easy just to keep the timezone fixed, and I'll just deal with slight time different during the daylight saving months." created="Sun, 17 Oct 2021 00:01:26 GMT" type="outline"/>
				</outline>
			<outline text="October 16" created="Sat, 16 Oct 2021 00:23:49 GMT" type="calendarDay" name="16">
				<outline text="While dealing with Google Cloud's console this morning, I've just been given a reminder on how utterly slow and clumsy it all feels.  The AWS console is not pretty, but at least it's fast." created="Sat, 16 Oct 2021 00:23:50 GMT" type="outline"/>
				</outline>
			<outline text="October 15" created="Thu, 14 Oct 2021 20:56:16 GMT" type="calendarDay" name="15">
				<outline text="1Password needs a way to archive a secret after N days unless it's otherwise used in some way.  Sometimes I get a new login to a system but I'm unsure as to whether I still need the old one.  I don't want to archive it immediately just in case I do; but if I don't, then the old login piles up, never to be archive, as I keep forgetting to do so later.  The way I imagine this working is a new action which will add a timeout to a secret.  If the secret is accessed in any way, such as copying the password, the timeout is reset.  But if it isn't, the timeout will eventually expire and the secret is archived.  This can even be extended so that if the timeout is reset at least 3 times or so, it will be removed completely." created="Fri, 15 Oct 2021 00:49:06 GMT" type="outline"/>
				<outline text="I appreciate Go offering a way to convert a JSON string into an integer when unmarshalling a JSON struct.  For those that don't know, it's possible to do this by adding the &quot;,string&quot; option to any int field (see &lt;a href=&quot;https://pkg.go.dev/encoding/json@go1.17.2#Marshal&quot;&gt;doco&lt;/a&gt;).  However, it would have been nice if this option, or another option, was extended to support both JSON integers and JSON strings that looked like integers in the same int field.  Not having this makes it difficult to build software that adheres to the principal of &quot;be lenient in what you accept and strict in what you product&quot;." created="Fri, 15 Oct 2021 00:34:02 GMT" type="outline"/>
				<outline text="Ooh, OK; another problem with Drummer and Old School.  I'm typing this on Friday 15th October at 10:04 AM my time (Australian EDS time).  They're appearing as children of the &quot;October 15&quot; node in Drummer, which is correct, but the post appears below the &quot;Thursday, October 14, 2021&quot; heading in the generated blog, which is incorrect.  I'll need to find a way to change the timezone of the generated headings. (EDIT - this was not a bug, this was &lt;a href=&quot;http://workingset.net/2021/10/16.html#a000126&quot; style=&quot;&quot;&gt;just me not reading the documentation&lt;/a&gt;)." created="Thu, 14 Oct 2021 23:04:08 GMT" type="outline"/>
				<outline text="I found myself writing the phrase &quot;with an SQL command&quot;, with the &quot;an&quot; appearing before &quot;SQL&quot;.  I'm not sure that's right, I think it should be &quot;with a SQL command&quot;.  But when reading it aloud, using the &quot;a&quot; here doesn't sound right either.  Instead, it sounds awkward.  Does it make sense to use &quot;an&quot; before a consonant for the sake of verbal ease?" created="Thu, 14 Oct 2021 22:59:27 GMT" type="outline"/>
				<outline text="Why doesn't PostgreSQL return an error when changing permissions on roles?  Almost every other command returns an error of some sort, but &quot;GRANT&quot; and &quot;REVOKE&quot; do not for some reason.  It can't be for plausible deniability reasons because a warning is raised." created="Thu, 14 Oct 2021 22:11:46 GMT" type="outline"/>
				<outline text="It's a little easy to forget how useful something like Docker actually is for developing software.  Previously when one needed to play around with some new technology, like a database, they had to install it on their own machine and make sure they do not mess it up, or deal with reinstalling it if they do.  Nowadays, you can simply replace the Docker container to start again with a single command.  Good times." created="Thu, 14 Oct 2021 20:56:17 GMT" type="outline"/>
				</outline>
			<outline text="October 14" created="Wed, 13 Oct 2021 19:55:53 GMT" type="calendarDay" name="14">
				<outline text="I had to fix a bug in Feed Journaler to import posts generated by Drummer and Old School.  Turns out that these micro posts — like the one that you are reading right now — are serialised to RSS as a plain XML text node.  Feed Journaler was previously assuming that the contents of feeds would be wrapped in a P element, since most of the blogging platforms I tested with generated HTML from Markdown.  So, had to reengineer the HTML to Markdown converter to handle this form of content.  It works, but it's not pretty.  The whole thing needs to be reengineered actually. " created="Thu, 14 Oct 2021 02:22:51 GMT" type="outline" image="http://scripting.com/images/2019/09/14/rssCoffeeCup.png"/>
				<outline text="GitLab does not show enough context in their Merge Request review UI.  Four lines above and below the change are not enough.  Either show more (maybe 10 lines) or have the option to show more.  Context is key when reviewing code changes." created="Wed, 13 Oct 2021 22:50:55 GMT" type="outline"/>
				<outline text="On the subject of Drummer, I like the idea of adding scripts, but I think it needs support for custom hot-key bindings.  Switching from the keyboard to mouse to create new posts and publish them is slightly less efficient than I'd like it to be.  When I have a quip, I'd like the world to know about it now!" created="Wed, 13 Oct 2021 22:43:19 GMT" type="outline"/>
				<outline text="Oh dear, I found a bug in Drummer.  I had an outliner opened in two browsers.  One of them had a node that was not in the other.  I  created a new node in the second browser before refreshing and by doing so I lost that unsynced node.  I guess I'll need to remember to refresh before adding posts to this outline." created="Wed, 13 Oct 2021 22:38:02 GMT" type="outline"/>
				<outline text="I was always a little unsure as to why editors had over-scroll at all. What was the point of extending the scrollbar pass the end of the document so that the last line shows up at the top of the screen? But while working at home with a monitor which should probably be a little higher, I've since come around to really liking this feature, and wishing every editor supported it." created="Wed, 13 Oct 2021 22:37:42 GMT" type="outline"/>
				</outline>
			<outline text="October 13" created="Tue, 12 Oct 2021 20:34:25 GMT" type="calendarDay" name="13">
				<outline text="It’s a shame that “personalisation” has changed from meaning the ability to configure software to your own needs, to something that means features that software vendors shove down your throat.  Modern examples of this include things like recommendations, news, etc.  Generally stuff that I didn’t ask for, don’t have control over, do not want to see, and can’t turn off." created="Wed, 13 Oct 2021 00:59:09 GMT" type="outline"/>
				<outline text="Not really interested in hearing what anyone has to say about NFTs at this stage." created="Wed, 13 Oct 2021 00:50:25 GMT" type="outline"/>
				<outline text="I really like the &lt;a href=&quot;https://vivaldi.com/&quot;&gt;Vivaldi&lt;/a&gt; browser.  A Chrome like experience with a decent level of privacy and customisability.  But, I wish it was just that little bit more stable." created="Tue, 12 Oct 2021 20:34:26 GMT" type="outline"/>
				</outline>
			<outline text="October 12" created="Mon, 11 Oct 2021 22:47:06 GMT" type="calendarDay" name="12">
				<outline text="Amusing.  I collect more domain names that I know what to do with, and to keep the list to a manageable size, I let some of them expire.  But as soon as they do, I realise that I had a use for it.  Moral of the story: don't let domains expire." created="Tue, 12 Oct 2021 09:24:32 GMT" type="outline"/>
				<outline text="I don't know why enterprise software companies like Slack and Atlassian seem to think it's okay to send announcements, recommendations, or other forms of marketing email to employees of companies that bought their software.  It's not like the employees choose to use the software they're asked to." created="Tue, 12 Oct 2021 04:53:16 GMT" type="outline"/>
				<outline text="Have got my second AstraZenica vaccine shot.  Feeling pretty good about it.  Also had a muffin this afternoon as a bit of a treat (I was offered a lollypop as well, and you better believe me when I say I accepted). 💉💉" created="Tue, 12 Oct 2021 03:13:22 GMT" type="outline" image="http://scripting.com/images/2021/02/25/realMuffin.png"/>
				<outline text="It's amazing, after all this development in computer technologies over the last 3 decades, how much of the current landscape still depends on the humble shell script." created="Mon, 11 Oct 2021 23:21:04 GMT" type="outline"/>
				<outline text="AWS needs a way to quickly switch amongst accounts quickly.  I know there's something to switch roles, but not every organisation is setup that way." created="Mon, 11 Oct 2021 23:09:49 GMT" type="outline"/>
				<outline text="Giving Drummer a try, a blogging engine by &lt;a href=&quot;http://davewiner.com/&quot;&gt;Dave Winer&lt;/a&gt;.  Interesting to see the cumulation of work that Winer has released over the years, from his outliner to what appears to be the blogging CMS he uses for &lt;a href=&quot;http://scripting.com/&quot;&gt;scripting.com&lt;/a&gt; (open this page in a tab alongside his own blog and rapidly switch between them; pretty similar, ay).  Anyway, this form of &quot;passive blogging&quot; is something that I've been hoping for for a little while now, and although I have not designs, it would be cool to play with this for a while." created="Mon, 11 Oct 2021 22:49:58 GMT" type="outline"/>
				<outline text="Using &quot;use&quot; to change the database in PostgreSQL does not look to work.  Which is unsurprising: &quot;use&quot; is a MySQL construct.  From my investigation, it looks like &quot;\c&quot; is the way to change the connected database." created="Mon, 11 Oct 2021 22:47:07 GMT" type="outline"/>
				<outline text="On Documenting Software" created="Tue, 12 Oct 2021 03:26:50 GMT" type="outline">
					<outline text="Dave Winer made some interesting notes about how he &lt;a href=&quot;http://scripting.com/2021/10/10.html#a170403&quot;&gt;approached documentation in Drummer&lt;/a&gt;, in that he would like to treat it not as an afterthought, but as something that grows alongside the product." created="Tue, 12 Oct 2021 03:26:58 GMT"/>
					<outline text="I sometimes wonder if the general feeling of user documentation amongst software developers is under appreciated somewhat.  With the general push towards &quot;discoverable&quot; UIs, the general feeling seems to be that user documentation is unnecessary.  The UI should speak for itself.  " created="Tue, 12 Oct 2021 03:29:29 GMT"/>
					<outline text="I'm sure some of it has to do with the general sense that writing documentation is tedious.  I empathise: I sometimes feel that way as well." created="Tue, 12 Oct 2021 03:33:47 GMT"/>
					<outline text="But maybe we're approaching documentation the wrong way.  Maybe instead of just explain the what, with sentences along the line of &quot;clicking the bar foobazer button will foobaz the selected bar&quot;, good documentation should go deeper and explain the how and why.  I'm sure a user can see from the button description that clicking it will foobaz their bar.  But why should they want to?  And if they do, what would foobazing actually do to bar?" created="Tue, 12 Oct 2021 03:34:22 GMT"/>
					<outline text="I don't know.  Maybe it has to do with someones enjoyment of the project.  I'm sure it's no coincidence that the one project where I had the most fun writing the documentation was also the project I had the most fun writing the code.  To have an opportunity to describe to the user how the whole system is put together.  Not only was it informative (or at least I hope it was), it also was an opportunity to explain it in a way that is sometimes not always possible in code.  A chance to explain the hows and whys." created="Tue, 12 Oct 2021 03:37:06 GMT"/>
					<outline text="Maybe it's also the feeling of informing, and therefore empowering, the user to achieving their goals using your software.  To see someone a user get utility from something you've built is what every developer should crave, and good documentation is, amongst other things, a way that that can be achieved." created="Tue, 12 Oct 2021 03:41:29 GMT"/>
					</outline>
				</outline>
			</outline>
		</body>
	</opml>
